% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/batch_clip.R
\name{batch_clip}
\alias{batch_clip}
\title{batch_clip}
\usage{
batch_clip(in_folder, out_folder, in_clip_shape, in_pattern = "*.tif$",
  in_nodata = NULL, out_nodata = NULL, out_format = "GTiff",
  out_proj = NULL, recursive = FALSE)
}
\arguments{
\item{in_folder}{string input folder containing the raster files}

\item{out_folder}{string output folder were clipped files are saved}

\item{in_clip_shape}{string input shape file used for clipping}

\item{in_pattern}{string pattern with which to search for rasters (default: "*.tif$)}

\item{in_nodata}{numeric nodata value of input raster files}

\item{out_nodata}{numeric nodata value of input raster files (defaults to NULL - if in_nodata is set and
out_nodata is NULL, then out_nodata is reset to in_nodata)}

\item{out_format}{string output format for clipped raster (defaults to "GTiff") - all valid gdal formats
are allowed}

\item{out_proj}{valid proj4 string (optional) output projection for clipped rasters. if not set,
output rasters are in the same projection as the input rasters}

\item{recursive}{logical if TRUE, analyze all subfolders of input_folder to find rasters}
}
\description{
batch_clip
}
\examples{

}

